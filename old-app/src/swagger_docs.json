{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "E-commerce API",
    "description": "This is the API documentation for the E-commerce platform. It provides endpoints for authentication, user management, order processing, product management, and reviews."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Endpoint to register a new user with the application.",
        "responses": {
          "200": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Endpoint to log in a user and generate an authentication token.",
        "responses": {
          "200": {
            "description": "User successfully logged in"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Authentication"],
        "summary": "User logout",
        "description": "Endpoint to log out a user and invalidate their authentication token.",
        "responses": {
          "200": {
            "description": "User successfully logged out"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieve a list of all registered users.",
        "responses": {
          "200": {
            "description": "List of users retrieved successfully"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "description": "Retrieve the current logged-in user's profile information.",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          }
        }
      }
    },
    "/users/update-user": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user information",
        "description": "Update the profile information of the current logged-in user.",
        "responses": {
          "200": {
            "description": "User information updated successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/users/update-password": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user password",
        "description": "Change the password of the current logged-in user.",
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get all orders",
        "description": "Retrieve a list of all orders placed by users.",
        "responses": {
          "200": {
            "description": "List of orders retrieved successfully"
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create a new order",
        "description": "Place a new order with the provided product and user details.",
        "responses": {
          "201": {
            "description": "Order created successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/orders/my-orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get user's orders",
        "description": "Retrieve a list of orders placed by the current logged-in user.",
        "responses": {
          "200": {
            "description": "List of user orders retrieved successfully"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order by ID",
        "description": "Retrieve the details of a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "patch": {
        "tags": ["Orders"],
        "summary": "Update order by ID",
        "description": "Update the details of a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Order updated successfully"
          },
          "404": {
            "description": "Order not found"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "description": "Retrieve a list of all reviews submitted by users.",
        "responses": {
          "200": {
            "description": "List of reviews retrieved successfully"
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Submit a review",
        "description": "Submit a new review for a product.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Review submitted successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get review by ID",
        "description": "Retrieve the details of a specific review by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Review details retrieved successfully"
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete review by ID",
        "description": "Delete a specific review by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Review deleted successfully"
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Update review by ID",
        "description": "Update the details of a specific review by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Review updated successfully"
          },
          "404": {
            "description": "Review not found"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "description": "Retrieve a list of all available products.",
        "responses": {
          "200": {
            "description": "List of products retrieved successfully"
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "description": "Add a new product to the catalog.",
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/products/image": {
      "post": {
        "tags": ["Products"],
        "summary": "Upload product image",
        "description": "Upload an image for a product.",
        "responses": {
          "201": {
            "description": "Image uploaded successfully"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get product by ID",
        "description": "Retrieve the details of a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the product to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Product details retrieved successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "tags": ["Products"],
        "summary": "Update product by ID",
        "description": "Update the details of a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the product to update."
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete product by ID",
        "description": "Delete a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the product to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["username", "email", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "john_doe",
          "description": "The username of the user."
        },
        "email": {
          "type": "string",
          "example": "john@example.com",
          "description": "The email address of the user."
        },
        "password": {
          "type": "string",
          "example": "password123",
          "description": "The password of the user."
        }
      }
    },
    "Product": {
      "type": "object",
      "required": ["name", "price"],
      "properties": {
        "name": {
          "type": "string",
          "example": "Laptop",
          "description": "The name of the product."
        },
        "price": {
          "type": "number",
          "example": 999.99,
          "description": "The price of the product."
        },
        "description": {
          "type": "string",
          "example": "A high-end gaming laptop.",
          "description": "A brief description of the product."
        },
        "imageUrl": {
          "type": "string",
          "example": "https://example.com/laptop.png",
          "description": "The URL of the product image."
        }
      }
    },
    "Order": {
      "type": "object",
      "required": ["productId", "quantity"],
      "properties": {
        "productId": {
          "type": "string",
          "example": "60d5ec49e7179a6df7460a6b",
          "description": "The ID of the product being ordered."
        },
        "quantity": {
          "type": "integer",
          "example": 2,
          "description": "The quantity of the product being ordered."
        }
      }
    },
    "Review": {
      "type": "object",
      "required": ["productId", "rating", "comment"],
      "properties": {
        "productId": {
          "type": "string",
          "example": "60d5ec49e7179a6df7460a6b",
          "description": "The ID of the product being reviewed."
        },
        "rating": {
          "type": "integer",
          "example": 5,
          "description": "The rating given to the product."
        },
        "comment": {
          "type": "string",
          "example": "Excellent product! Highly recommended.",
          "description": "A comment about the product."
        }
      }
    }
  }
}
